/**
 * Check if a word is a common stop word
 */
export const isStopWord = (word: string): boolean => {
  const stopWords = new Set([
    // Common stop words
    "the",
    "be",
    "to",
    "of",
    "and",
    "a",
    "in",
    "that",
    "have",
    "i",
    "it",
    "for",
    "not",
    "on",
    "with",
    "he",
    "as",
    "you",
    "do",
    "at",
    "this",
    "but",
    "his",
    "by",
    "from",
    "they",
    "she",
    "or",
    "an",
    "will",
    "my",
    "one",
    "all",
    "would",
    "there",
    "their",
    "what",
    "so",
    "up",
    "out",
    "if",
    "about",
    "who",
    "get",
    "which",
    "go",
    "me",
    "when",
    "make",
    "can",
    "like",
    "time",
    "no",
    "just",
    "him",
    "know",
    "take",
    "people",
    "into",
    "year",
    "your",
    "good",
    "some",
    "could",
    "them",
    "see",
    "other",
    "than",
    "then",
    "now",
    "look",
    "only",
    "come",
    "its",
    "over",
    "think",
    "also",
    "back",
    "after",
    "use",
    "two",
    "how",
    "our",
    "work",
    "first",
    "well",
    "way",
    "even",
    "new",
    "want",
    "because",
    "any",
    "these",
    "give",
    "day",
    "most",
    "us",
    "been",
    "has",
    "had",
    "were",
    "said",
    "each",
    "which",
    "their",
    "said",
    "them",
    // Additional filler words
    "very",
    "really",
    "quite",
    "rather",
    "such",
    "much",
    "many",
    "more",
    "most",
    "may",
    "might",
    "must",
    "shall",
    "should",
    "does",
    "did",
    "doing",
    "made",
    "make",
    "makes",
    "making",
    "being",
    "am",
    "is",
    "are",
    "was",
    "been",
    "have",
    "has",
    "had",
    "here",
    "there",
    "where",
    "when",
    "why",
    "how",
    "what",
    "who",
    "those",
    "these",
    "that",
    "this",
    "some",
    "any",
    "every",
    "all",
  ]);

  return stopWords.has(word.toLowerCase());
};

/**
 * Count words in text
 */
export const countWords = (text: string): number => {
  return text.trim().split(/\s+/).length;
};

/**
 * Clean and normalize text
 */
export const cleanText = (text: string): string => {
  return text.replace(/\s+/g, " ").trim();
};
